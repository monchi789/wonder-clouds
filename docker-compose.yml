services:
  bd: 
    image: postgres:16.2-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wonder-network

  pgadmin4:
    image: elestio/pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    networks:
      - wonder-network

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    volumes: 
      - ./backend:/app
      - ./uploads:/app/uploads
    networks:
      - wonder-network

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    volumes: 
      - ./frontend:/app
    networks:
      - wonder-network

  nginx:
    image: nginx:alpine
    container_name: wonderclouds-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: wonderclouds-certbot
    restart: always
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  
networks:
  app-network:
    driver: bridge

volumes:
  frontend:
  backend:
  uploads:
  servers.json:
  postgres_data: