# /nginx/conf.d/default.conf

# Redireccionamiento HTTP a HTTPS para todos los dominios
server {
    listen 80;
    listen [::]:80;
    server_name wonderclouds.dev www.wonderclouds.dev api.wonderclouds.dev db.wonderclouds.dev;
    
    # Ruta para la validación de Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Configuración para el dominio principal y www
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wonderclouds.dev www.wonderclouds.dev;

    # Certificados SSL
    ssl_certificate /etc/letsencrypt/live/wonderclouds.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wonderclouds.dev/privkey.pem;
    
    # Configuraciones SSL recomendadas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS (uncomment if you're sure)
    # add_header Strict-Transport-Security "max-age=63072000" always;
    
    # Frontend (NextJS)
    location / {
        proxy_pass http://161.132.38.134:3000;  # Puerto del frontend
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Configuración para WebSocket si lo necesitas
        proxy_set_header Connection "upgrade";
    }
}

# Configuración para la API
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.wonderclouds.dev;

    ssl_certificate /etc/letsencrypt/live/api.wonderclouds.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.wonderclouds.dev/privkey.pem;
    
    # Mismas configuraciones SSL que arriba
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Backend (NestJS)
    location / {
        proxy_pass http://161.132.38.134:4000;  # Puerto del backend
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Configuración para la base de datos (si necesitas exponer pgAdmin o similar)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name db.wonderclouds.dev;

    ssl_certificate /etc/letsencrypt/live/db.wonderclouds.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/db.wonderclouds.dev/privkey.pem;
    
    # Mismas configuraciones SSL que arriba
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Solo si necesitas exponer pgAdmin o similar
    location / {
        proxy_pass http://161.132.38.134:5050;  # Puerto de pgAdmin si lo usas
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}